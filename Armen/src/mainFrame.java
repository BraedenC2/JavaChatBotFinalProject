
import java.awt.Color;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Braeden
 */
public class mainFrame extends javax.swing.JFrame {

    /**
     * Creates new form mainFrame
     */
    public mainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        conversionLabel = new javax.swing.JLabel();
        celciusInput = new javax.swing.JTextField();
        celciusLabel = new javax.swing.JLabel();
        fareinhietInput = new javax.swing.JTextField();
        fareinhietLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        notesInput = new javax.swing.JTextArea();
        ai_Input = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        ai_Output = new javax.swing.JTextArea();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        checkText1 = new javax.swing.JTextField();
        checkText2 = new javax.swing.JTextField();
        checkText3 = new javax.swing.JTextField();
        checkText4 = new javax.swing.JTextField();
        checkText5 = new javax.swing.JTextField();
        checkText6 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Armen");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);
        setSize(new java.awt.Dimension(691, 372));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setLayout(null);

        conversionLabel.setForeground(new java.awt.Color(255, 255, 255));
        conversionLabel.setText("Conversion");
        jPanel1.add(conversionLabel);
        conversionLabel.setBounds(310, 200, 80, 16);

        celciusInput.setBackground(new java.awt.Color(102, 102, 102));
        celciusInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                celciusInputActionPerformed(evt);
            }
        });
        jPanel1.add(celciusInput);
        celciusInput.setBounds(310, 230, 64, 22);

        celciusLabel.setForeground(new java.awt.Color(255, 255, 255));
        celciusLabel.setText("C");
        jPanel1.add(celciusLabel);
        celciusLabel.setBounds(380, 230, 20, 16);

        fareinhietInput.setBackground(new java.awt.Color(102, 102, 102));
        fareinhietInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fareinhietInputActionPerformed(evt);
            }
        });
        jPanel1.add(fareinhietInput);
        fareinhietInput.setBounds(310, 260, 64, 22);

        fareinhietLabel.setForeground(new java.awt.Color(255, 255, 255));
        fareinhietLabel.setText("F");
        jPanel1.add(fareinhietLabel);
        fareinhietLabel.setBounds(380, 260, 20, 16);

        notesInput.setBackground(new java.awt.Color(102, 102, 102));
        notesInput.setColumns(20);
        notesInput.setRows(5);
        notesInput.setEnabled(false);
        notesInput.setHighlighter(null);
        notesInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                notesInputKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(notesInput);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(170, 200, 340, 140);

        ai_Input.setBackground(new java.awt.Color(102, 102, 102));
        ai_Input.setForeground(new java.awt.Color(0, 204, 102));
        ai_Input.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ai_InputActionPerformed(evt);
            }
        });
        jPanel1.add(ai_Input);
        ai_Input.setBounds(150, 110, 382, 22);

        ai_Output.setEditable(false);
        ai_Output.setBackground(new java.awt.Color(51, 51, 51));
        ai_Output.setColumns(20);
        ai_Output.setForeground(new java.awt.Color(0, 204, 204));
        ai_Output.setRows(5);
        jScrollPane2.setViewportView(ai_Output);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(150, 180, 382, 180);

        jCheckBox1.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jCheckBox1InputMethodTextChanged(evt);
            }
        });
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        jPanel1.add(jCheckBox1);
        jCheckBox1.setBounds(150, 180, 20, 30);

        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });
        jPanel1.add(jCheckBox2);
        jCheckBox2.setBounds(150, 210, 20, 30);

        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });
        jPanel1.add(jCheckBox3);
        jCheckBox3.setBounds(150, 240, 20, 30);

        jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox4ActionPerformed(evt);
            }
        });
        jPanel1.add(jCheckBox4);
        jCheckBox4.setBounds(150, 270, 20, 30);

        jCheckBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox5ActionPerformed(evt);
            }
        });
        jPanel1.add(jCheckBox5);
        jCheckBox5.setBounds(150, 300, 20, 30);

        jCheckBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox6ActionPerformed(evt);
            }
        });
        jPanel1.add(jCheckBox6);
        jCheckBox6.setBounds(150, 330, 20, 30);

        checkText1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkText1ActionPerformed(evt);
            }
        });
        jPanel1.add(checkText1);
        checkText1.setBounds(180, 180, 350, 30);

        checkText2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkText2ActionPerformed(evt);
            }
        });
        jPanel1.add(checkText2);
        checkText2.setBounds(180, 210, 350, 30);

        checkText3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkText3ActionPerformed(evt);
            }
        });
        jPanel1.add(checkText3);
        checkText3.setBounds(180, 240, 350, 30);

        checkText4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkText4ActionPerformed(evt);
            }
        });
        jPanel1.add(checkText4);
        checkText4.setBounds(180, 270, 350, 30);

        checkText5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkText5ActionPerformed(evt);
            }
        });
        jPanel1.add(checkText5);
        checkText5.setBounds(180, 300, 350, 30);

        checkText6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkText6ActionPerformed(evt);
            }
        });
        jPanel1.add(checkText6);
        checkText6.setBounds(180, 330, 350, 30);

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -2, 691, 400));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void celciusInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_celciusInputActionPerformed
        // TODO add your handling code here:
        int num = (int)((Double.parseDouble(celciusInput.getText()))
            * 1.8 + 32);
        fareinhietInput.setText(num + "");
        
    }//GEN-LAST:event_celciusInputActionPerformed

    private void fareinhietInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fareinhietInputActionPerformed
        // TODO add your handling code here:
            int num = (int) (5.0 / 9.0 * (Double.parseDouble(fareinhietInput.getText()) - 32));
        celciusInput.setText(num + "");
    }//GEN-LAST:event_fareinhietInputActionPerformed

    private void notesInputKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_notesInputKeyTyped
        // TODO add your handling code here:
        try {
            String input = notesInput.getText();
            FileWriter fw = new FileWriter("notes.txt");
            fw.write(input);
            fw.close();
        } catch (Exception exception) {
            System.exit(0);
        }
    }//GEN-LAST:event_notesInputKeyTyped

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        conversionLabel.setVisible(false);
        celciusInput.setVisible(false);
        celciusLabel.setVisible(false);
        fareinhietInput.setVisible(false);
        fareinhietLabel.setVisible(false);
        notesInput.setVisible(false);
        jScrollPane1.setVisible(false);
        jCheckBox1.setVisible(false);
        jCheckBox2.setVisible(false);
        jCheckBox3.setVisible(false);
        jCheckBox4.setVisible(false);
        jCheckBox5.setVisible(false);
        jCheckBox6.setVisible(false);
        checkText1.setVisible(false);
        checkText2.setVisible(false);
        checkText3.setVisible(false);
        checkText4.setVisible(false);
        checkText5.setVisible(false);
        checkText6.setVisible(false);
        
        
    try {
        BufferedReader reader = new BufferedReader(new FileReader("todoList.txt"));
        String line;
        while ((line = reader.readLine()) != null) {
            checkText1.setText(line);
        }   
        reader.close();
    } catch (IOException e) {
        // do something
    }

        
        try {
            FileReader fr = new FileReader("notes.txt");
            int i;
            String output = "";
            while ((i = fr.read()) != -1){
                output += (char) i;   
            }
            notesInput.setText(output);
            
        } catch (Exception exception) {
            System.exit(0);
        }
    }//GEN-LAST:event_formWindowOpened

    static String chatInput = "";
    
    private void ai_InputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ai_InputActionPerformed
        // TODO add your handling code here:
        
        chatInput = ai_Input.getText();
        chatInput = chatInput.toLowerCase();
        chatBotResponses();
        
    }//GEN-LAST:event_ai_InputActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        // TODO add your handling code here:
     
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox4ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jCheckBox4ActionPerformed

    private void jCheckBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox5ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jCheckBox5ActionPerformed

    private void jCheckBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox6ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jCheckBox6ActionPerformed

    private void jCheckBox1InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jCheckBox1InputMethodTextChanged
        // TODO add your handling code here:
       
    }//GEN-LAST:event_jCheckBox1InputMethodTextChanged

    static String[] todoArray = new String[6];
    
    public void todoWriter() throws IOException{
        FileWriter writer = new FileWriter("todoList.txt");
        BufferedWriter bufferedWriter = new BufferedWriter(writer);
        
        for (String todoItem : todoArray){
            bufferedWriter.write(todoItem);
            bufferedWriter.newLine();
        }
        bufferedWriter.close();
    }
    
    private void checkText1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkText1ActionPerformed
        todoArray[0] = checkText1.getText();
        try {
            todoWriter();
        } catch (IOException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_checkText1ActionPerformed

    private void checkText2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkText2ActionPerformed
        // TODO add your handling code here:
        todoArray[1] = checkText2.getText();
                try {
            todoWriter();
        } catch (IOException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_checkText2ActionPerformed

    private void checkText3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkText3ActionPerformed
        // TODO add your handling code here:
        todoArray[2] = checkText3.getText();
                try {
            todoWriter();
        } catch (IOException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_checkText3ActionPerformed

    private void checkText4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkText4ActionPerformed
        // TODO add your handling code here:
        todoArray[3] = checkText4.getText();
                try {
            todoWriter();
        } catch (IOException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_checkText4ActionPerformed

    private void checkText5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkText5ActionPerformed
        // TODO add your handling code here:
        todoArray[4] = checkText5.getText();
                try {
            todoWriter();
        } catch (IOException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_checkText5ActionPerformed

    private void checkText6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkText6ActionPerformed
        // TODO add your handling code here:
        todoArray[5] = checkText6.getText();
                try {
            todoWriter();
        } catch (IOException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_checkText6ActionPerformed

    // Chatbot responses:
    
    private void chatBotResponses(){
        Random random = new Random();

        String[] greetings = {"Hello", "Hi", "Howdy", "Hiya", "Hey"};
        String randomGreeting = greetings[random.nextInt(greetings.length)];
        String[] howItsDoing = {"I'm good!", "I'm great!", "I'm doing well!", "Fantastic!", "Amazing!"};
        String randomHowItsDoing = howItsDoing[random.nextInt(howItsDoing.length)];
        String[] thanking = {"You're welcome!", "No problem!", "mHm"};
        String randomThanking = thanking[random.nextInt(thanking.length)];
        LocalDateTime myDateObj = LocalDateTime.now();
        DateTimeFormatter myFormatObj = DateTimeFormatter.ofPattern("dd-MM-yyyy HH:mm:ss");
        String formattedDate = myDateObj.format(myFormatObj);
        
    if (chatInput.matches(".*(hi|hey|hello).*")){
        ai_Output.setText(randomGreeting);
    }
    if (chatInput.matches(".*(how are you|how is you|hows it going).*")){
        ai_Output.setText(randomHowItsDoing);
    }
    if (chatInput.matches(".*(what time is it|time|what is the date|whats the date).*")){
        ai_Output.setText(formattedDate);
    }
    if (chatInput.matches(".*(thanks|thank you|thank u|thx).*")){
        ai_Output.setText(randomThanking);
    }
    if (chatInput.matches(".*(help|what can you do|do something).*")){
        ai_Output.setText("""
                            I can do:
                          1) Repond to stuff
                          2) Remember things you tell me
                          3) Tell you the date/time
                          4) Show you your notes
                          5) Convert Degrees
                          6) Save your todo list""");
    }
    if (chatInput.matches(".*(what do you remember|show me what you remember|open thoughts).*")){
            try {
                chatbotRecall();
            } catch (IOException ex) {
                Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
    if (chatInput.startsWith("remember") || chatInput.startsWith("remind")){
            try {
                chatbotRemember();
            } catch (IOException ex) {
                Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        String[] rememberingResponse = {"Okay, I will remember that", "Certainly!", "Got it!", "Sure!"};
        String randomRemberingResponse = rememberingResponse[random.nextInt(rememberingResponse.length)];
        ai_Output.setText(randomRemberingResponse);
    }
    if (chatInput.startsWith("delete") || chatInput.startsWith("clear")){
            try {
                chatbotWipe();
            } catch (IOException ex) {
                Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        String[] deleteMemory = {"I already forgot!", "Thoughts deleted", "Done!"};
        String randomDeleteMemory = deleteMemory[random.nextInt(deleteMemory.length)];
        ai_Output.setText(randomDeleteMemory);
    }
    if (chatInput.equals("show convert")){
        conversionLabel.setVisible(true);
        celciusInput.setVisible(true);
        celciusLabel.setVisible(true);
        fareinhietInput.setVisible(true);
        fareinhietLabel.setVisible(true);
        notesInput.setVisible(false);
        jScrollPane1.setVisible(false);
        ai_Output.setVisible(false);
        jScrollPane2.setVisible(false);
        jCheckBox1.setVisible(false);
        jCheckBox2.setVisible(false);
        jCheckBox3.setVisible(false);
        jCheckBox4.setVisible(false);
        jCheckBox5.setVisible(false);
        jCheckBox6.setVisible(false);
        checkText1.setVisible(false);
        checkText2.setVisible(false);
        checkText3.setVisible(false);
        checkText4.setVisible(false);
        checkText5.setVisible(false);
        checkText6.setVisible(false);
        
    }
    if (chatInput.equals("show notes")){
        conversionLabel.setVisible(false);
        celciusInput.setVisible(false);
        celciusLabel.setVisible(false);
        fareinhietInput.setVisible(false);
        fareinhietLabel.setVisible(false);
        jCheckBox1.setVisible(false);
        jCheckBox2.setVisible(false);
        jCheckBox3.setVisible(false);
        jCheckBox4.setVisible(false);
        jCheckBox5.setVisible(false);
        jCheckBox6.setVisible(false);
        jScrollPane1.setVisible(true);
        notesInput.setVisible(true);
        notesInput.setEnabled(true);
        jScrollPane2.setVisible(false);
        checkText1.setVisible(false);
        checkText2.setVisible(false);
        checkText3.setVisible(false);
        checkText4.setVisible(false);
        checkText5.setVisible(false);
        checkText6.setVisible(false);
        
    }
    if (chatInput.equals("hide")){
        conversionLabel.setVisible(false);
        celciusInput.setVisible(false);
        celciusLabel.setVisible(false);
        fareinhietInput.setVisible(false);
        fareinhietLabel.setVisible(false);
        jScrollPane1.setVisible(false);
        notesInput.setVisible(false);
        jCheckBox1.setVisible(false);
        jCheckBox2.setVisible(false);
        jCheckBox3.setVisible(false);
        jCheckBox4.setVisible(false);
        jCheckBox5.setVisible(false);
        jCheckBox6.setVisible(false);
        checkText1.setVisible(false);
        checkText2.setVisible(false);
        checkText3.setVisible(false);
        checkText4.setVisible(false);
        checkText5.setVisible(false);
        checkText6.setVisible(false);
        jScrollPane2.setVisible(true);
        ai_Output.setVisible(true);
        ai_Output.setText(":)");
    }
    if (chatInput.equals("show todo")){
        conversionLabel.setVisible(false);
        celciusInput.setVisible(false);
        celciusLabel.setVisible(false);
        fareinhietInput.setVisible(false);
        fareinhietLabel.setVisible(false);
        jScrollPane1.setVisible(false);
        notesInput.setVisible(false);
        jScrollPane2.setVisible(false);
        ai_Output.setVisible(false);
        jCheckBox1.setVisible(true);
        jCheckBox2.setVisible(true);
        jCheckBox3.setVisible(true);
        jCheckBox4.setVisible(true);
        jCheckBox5.setVisible(true);
        jCheckBox6.setVisible(true);
        checkText1.setVisible(true);
        checkText2.setVisible(true);
        checkText3.setVisible(true);
        checkText4.setVisible(true);
        checkText5.setVisible(true);
        checkText6.setVisible(true);
        }
    }
    
    
    private void chatbotWipe() throws IOException {
        FileWriter fw = new FileWriter("chatbotNotes.txt");
        
        fw.write("");
        fw.flush();
        fw.close();
        
    }
    
    private void chatbotRemember() throws IOException{
        FileWriter fw = new FileWriter("chatbotNotes.txt", true);
        String data = chatInput;
        
        if (data.startsWith("remember")) {
            data = data.substring(9);   // Removes the first 8 characters
            
            if (data.startsWith("to")) {
                data = data.substring(3);
            }
            if (data.startsWith("that")) {
                data = data.substring(5);
            }
            
        } else if (data.startsWith("remind me")) {
            data = data.substring(10);
            
            if (data.startsWith("to")) {
                data = data.substring(3);
            }
        }
        
        // replaces all the you's with i's for perspective
        data = data.replaceAll(" you", "###");
        data = data.replaceAll("you ", "===");
        data = data.replaceAll("i ", "you ");
        data = data.replaceAll(" i ", " you ");
        data = data.replaceAll("###", " me");
        data = data.replaceAll("===", "me ");

        
        fw.write("\n" + data);
        fw.flush();
        fw.close();
    }
    
    private void chatbotRecall() throws IOException {
        FileReader fr = new FileReader("chatbotNotes.txt");
        int i;
        String recalledInformation = "";
        while ((i = fr.read())!=-1){
            recalledInformation += (char) i;
        }
        ai_Output.setText("Memory: " + recalledInformation);
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ai_Input;
    private javax.swing.JTextArea ai_Output;
    private javax.swing.JTextField celciusInput;
    private javax.swing.JLabel celciusLabel;
    private javax.swing.JTextField checkText1;
    private javax.swing.JTextField checkText2;
    private javax.swing.JTextField checkText3;
    private javax.swing.JTextField checkText4;
    private javax.swing.JTextField checkText5;
    private javax.swing.JTextField checkText6;
    private javax.swing.JLabel conversionLabel;
    private javax.swing.JTextField fareinhietInput;
    private javax.swing.JLabel fareinhietLabel;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea notesInput;
    // End of variables declaration//GEN-END:variables
}
